name: CI

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  workflow_dispatch:

env:
  # Force colored output in CI
  FORCE_COLOR: 1

jobs:
  test-fpm:
    name: Test with FPM
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        gcc-version: [11, 12, 13]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Need full history for version generation

      - name: Setup Fortran
        uses: fortran-lang/setup-fortran@v1
        with:
          compiler: gcc
          version: ${{ matrix.gcc-version }}

      - name: Setup FPM
        uses: fortran-lang/setup-fpm@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with FPM
        run: fpm build --verbose

      - name: Run tests with FPM
        run: |
          chmod +x test/scripts/curl
          PATH="${PWD}/test/scripts:$PATH" fpm test --verbose

      - name: Run example with FPM
        run: fpm run --verbose

  test-cmake:
    name: Test with CMake
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        build-type: [Debug, Release]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Fortran
        uses: fortran-lang/setup-fortran@v1
        with:
          compiler: gcc
          version: 12

      - name: Configure CMake
        run: |
          cmake -B build \
                -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} \
                -DCMAKE_Fortran_COMPILER=gfortran

      - name: Build with CMake
        run: cmake --build build --config ${{ matrix.build-type }} --verbose

      - name: Run CMake tests
        working-directory: build
        run: ctest --output-on-failure --verbose

  documentation:
    name: Build Documentation
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install FORD
        run: |
          python -m pip install --upgrade pip
          pip install ford

      - name: Build documentation
        run: ford docs/ford.md

      - name: Upload documentation artifacts
        uses: actions/upload-artifact@v3
        with:
          name: documentation
          path: docs/generated/

      - name: Deploy to GitHub Pages
        if: github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/generated
          force_orphan: true

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Fortran
        uses: fortran-lang/setup-fortran@v1
        with:
          compiler: gcc
          version: 12

      - name: Check compilation with strict flags
        run: |
          gfortran -c -Wall -Wextra -Werror -std=f2008 \
                   -fcheck=all -fbacktrace \
                   src/*.f90

      - name: Check for TODO/FIXME comments
        run: |
          if grep -r "TODO\|FIXME" src/ --include="*.f90" --include="*.F90"; then
            echo "Warning: Found TODO/FIXME comments"
            exit 0
          fi